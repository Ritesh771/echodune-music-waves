# Generated by Django 4.2.16 on 2025-06-26 17:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth_app', '0003_playlist_likedsong'),
    ]

    operations = [
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='playlist',
            name='is_shared',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='playlist',
            name='share_link',
            field=models.CharField(blank=True, max_length=255, null=True, unique=True),
        ),
        migrations.CreateModel(
            name='RecentSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255)),
                ('searched_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recent_searches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-searched_at'],
            },
        ),
        migrations.CreateModel(
            name='QueueSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('queue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_app.queue')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_app.song')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('queue', 'song')},
            },
        ),
        migrations.AddField(
            model_name='queue',
            name='songs',
            field=models.ManyToManyField(related_name='in_queues', through='auth_app.QueueSong', to='auth_app.song'),
        ),
        migrations.AddField(
            model_name='queue',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='queue', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PlaylistLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='auth_app.playlist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_playlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('playlist', 'user')},
            },
        ),
        migrations.CreateModel(
            name='PlaylistCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborators', to='auth_app.playlist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('playlist', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloaded_by', to='auth_app.song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'song')},
            },
        ),
    ]
